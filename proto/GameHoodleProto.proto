//GameHoodleProto.proro
//弹珠游戏

syntax = "proto3";
package GameHoodleProto;

enum Cmd {
	INVALED = 0;
	
	///////////////////////////////////
	//房间相关协议
	///////////////////////////////////

	eCreateRoomReq = 1; //创建包厢
	eCreateRoomRes = 2;

	eJoinRoomReq = 3;	//加入包厢
	eJoinRoomRes = 4;

	eExitRoomReq = 5;	//退出包厢
	eExitRoomRes = 6;

	eDessolveReq = 7;	//解散包厢
	eDessolveRes = 8;

	eGetRoomStatusReq = 9;	//包厢状态
	eGetRoomStatusRes = 10;

	eBackRoomReq = 11;	//返回包厢
	eBackRoomRes = 12;

	///////////////////////////////////
	//游戏相关协议
	///////////////////////////////////

	eCheckLinkGameReq = 13; 	//进入包厢，连接到游戏服务，发送一些数据到客户端
	eCheckLinkGameRes = 14;

	eUserInfoRes = 15;		//玩家信息

	eRoomInfoRes = 16; 	//房间规则
	eRoomIdRes = 17; 	//房间号
	ePlayCountRes = 18; 	//局数

	eUserReadyReq = 19;	//玩家准备
	eUserReadyRes = 20;
	
	eGameStartRes = 21;	//游戏开始
	eGameResultRes = 22;	//游戏结束

	eLoginLogicReq = 23;	//登录游戏服
	eLoginLogicRes = 24;
}

///////////////////////////////////
//房间相关协议
///////////////////////////////////

message CreateRoomReq {
	required string roominfo = 1;
}

message CreateRoomRes {
	required sint32 status = 1;
}

message JoinRoomReq {
	required string roomid = 1;
}

message JoinRoomRes {
	required sint32 status = 1;
}

message ExitRoomReq {
	
}

message ExitRoomRes {
	required sint32 status = 1;
	optional sint32 numberid = 2;
}

message DessolveReq {
	
}

message DessolveRes {
	required sint32 status = 1;
}

message GetRoomStatusReq {
	
}

message GetRoomStatusRes {
	required sint32 status = 1;
}

message BackRoomReq {
	
}

message BackRoomRes {
	required sint32 status = 1;
}

///////////////////////////////////
//游戏相关协议
///////////////////////////////////

message UserInfo {
	required string numberid = 1;
	required string userInfoString = 2;
}

message CheckLinkGameReq {

}

message CheckLinkGameRes {
	required sint32 status = 1;
}

message UserInfoRes {
	repeated UserInfo userinfo = 1;
}

message RoomInfoRes {
	required string roominfo = 1;
}

message RoomIdRes {
	required string roomid = 1;
}

message PlayCountRes {
	required string playcount = 1;
	required string totalplaycount = 2;
}

message UserReadyReq {
	
}

message UserReadyRes {
	required sint32 status 	= 1;
	optional string numberid = 2;
}

message GameStart {
	required sint32 status = 1;
}

message GameResultRes {
	repeated sint32 scores = 1;
}

message UserLostConnectRes {
}

message LoginLogicReq {
}

message LoginLogicRes {
	required sint32 status = 1;
}